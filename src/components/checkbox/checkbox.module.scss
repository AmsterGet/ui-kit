@import "../../assets/styles/variables/typography";

@mixin checked-state($borderColor, $backgroundColor) {
  border-color: $borderColor;
  background-color: $backgroundColor;
  background-repeat: no-repeat;
  background-position: center;
  background-image: url("data:image/svg+xml,%3Csvg width='12' height='9' viewBox='0 0 12 9' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.5 4.25L4.5 7.25L10.5 0.75' stroke='white' stroke-width='2'/%3E%3C/svg%3E");
}

.input {
  position: absolute;
  opacity: 0;
  top: 0;
  left: 0;
}

.checkbox {
  position: absolute;
  width: 16px;
  height: 16px;
  border: 1px solid var(--rp-ui-kit-e-200); // Default color
  border-radius: 3px;
  margin-left: -24px;
  box-sizing: border-box;
  cursor: pointer;
}

.children-container {
  cursor: pointer;

  & a {
    text-decoration: none;
    color: var(--rp-ui-kit-color-primary);
  }

  & a:focus,
  & a:focus-visible {
    outline: none;
    color: var(--rp-ui-kit-color-primary-focused);
    text-decoration: underline;
  }
}

.light {
  display: inline-flex;
  align-items: center;
  padding-left: 24px;
  color: var(--rp-ui-kit-color-text-2);  // TODO
  border-color: var(--rp-ui-kit-color-text-2);  // TODO
  font-family: var(--rp-ui-kit-font-family-base);
  font-weight: $fw-medium;
  font-size: 13px;
  line-height: 20px;
  .disabled {
    opacity: 0.3;
    pointer-events: none;
  }

  .input {
    &:checked + .checkbox {
      @include checked-state(var(--rp-ui-kit-color-primary), var(--rp-ui-kit-color-primary));
    }
    &:hover + .checkbox {
      border-color: var(--rp-ui-kit-e-400);  // TODO: change to theme variable
    }
    &:active:not(:disabled) + .checkbox {
      border: 2px solid var(--rp-ui-kit-color-primary-focused);
    }
    &:checked:hover + .checkbox {
      @include checked-state(var(--rp-ui-kit-color-primary-hover), var(--rp-ui-kit-color-primary-hover));
    }
    &:checked:active:not(:disabled) + .checkbox {
      @include checked-state(var(--rp-ui-kit-color-primary-focused), var(--rp-ui-kit-color-primary-focused));
    }
    &:disabled + .checkbox {
      border-color: var(--rp-ui-kit-e-200); // TODO: change to theme variable
    }
    &:checked:disabled + .checkbox {
      @include checked-state(var(--rp-ui-kit-color-primary), var(--rp-ui-kit-color-primary));
      opacity: 0.3;
      pointer-events: none;
    }
    &:focus + .checkbox {
      border: 2px solid var(--rp-ui-kit-color-primary-focused);
    }
  }
}

.dark {
  display: inline-flex;
  align-items: center;
  padding-left: 24px;
  color: var(--rp-ui-kit-color-text-2);
  border-color: var(--rp-ui-kit-color-text-2);
  font-family: var(--rp-ui-kit-font-family-base);
  font-weight: $fw-medium;
  font-size: 13px;
  line-height: 20px;
  .disabled {
    opacity: 0.5;
    pointer-events: none;
  }

  .input {
    &:checked + .checkbox {
      @include checked-state(var(--rp-ui-kit-color-primary), var(--rp-ui-kit-color-primary));
    }
    &:hover + .checkbox {
      border-color: var(--rp-ui-kit-darkmode-gray-50); // TODO
    }
    &:active:not(:disabled) + .checkbox {
      border: 2px solid var(--rp-ui-kit-color-primary-focused);
    }
    &:checked:hover + .checkbox {
      @include checked-state(var(--rp-ui-kit-color-primary-hover), var(--rp-ui-kit-color-primary-hover));
    }
    &:checked:active:not(:disabled) + .checkbox {
      @include checked-state(var(--rp-ui-kit-color-primary-focused), var(--rp-ui-kit-color-primary-focused));
    }
    &:disabled + .checkbox {
      border-color: var(--rp-ui-kit-darkmode-gray-100);  // TODO
    }
    &:checked:disabled + .checkbox {
      @include checked-state(var(--rp-ui-kit-color-primary), var(--rp-ui-kit-color-primary));
      opacity: 0.5;
      pointer-events: none;
    }
  }
}
